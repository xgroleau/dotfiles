#!/bin/bash

#Keep it in alphabetical order
PACKAGES = "emacs"
SERVER_PACKAGES = "curl git zsh" 

RED=$(printf '\033[31m')
GREEN=$(printf '\033[32m')
YELLOW=$(printf '\033[33m')
BLUE=$(printf '\033[34m')
BOLD=$(printf '\033[1m')
RESET=$(printf '\033[m')

#Flags
HEADLESS="${HEADLESS_SERVER:-false}"

#------------Help------------#
help(){
    echo ""
    echo "A bootstrap script for YADM, this installs all dependencies for my dotfiles"
    echo "Note that YADM should call this script automatically, no need to call it again, unless there is an update"
    echo "This install ${PACAKGES} spacemacs rust zsh and powerlevel10k"
    echo ""

    echo "Usage:"
    echo "      -h or --help to show this scree"
    echo "      -s or --server for installing only server packages: zsh, curl and git"
    echo "              or can be done having the HEADLESS_SERVER env to true since yadm does not pass arguments"
    echo ""
}

echo_info() {
    echo "${BLUE}$@${RESET}"
}

echo_error(){
    echo "${RED}$@${RESET}" >&2
}

#------------Package installers------------#
apt_install(){
    #needed to prevent tz setting to request interaction
    #should not really happen in the real world, only happens in containers
    export DEBIAN_FRONTEND=noninteractive

    echo_info "Detected Ubuntu/Debian"

    echo_info "Updating repo"
    sudo -preserve-env apt-get update

    echo_info "Installing apps"
    sudo -preserve-env  apt-get -y install $PACKAGES
}

zypper_install(){
    echo_info "Detected opensuse"

    echo_info "Updating repo"
    sudo zypper ref

    echo_info "Installing apps"
    sudo zypper in -y $PACKAGES
}

install_packages(){
    #Debian, ubuntu or derivatives
    if hash 2>/dev/null apt-get ; then
        apt_install
    #Suse or derivatives
    elif hash 2>/dev/null zypper ; then
        zypper_install
    #Fails
    else
        echo_error "Your package manager is not supported" 
        exit 1
    fi
}

#------------Config installers------------#
install_spacemacs(){
    git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d
    git -C ~/.emacs.d checkout develop
}

install_rustup(){
    curl --proto '=https' --tlsv1.2 -sSfL https://sh.rustup.rs > /tmp/rustup.sh
    chmod +x /tmp/rustup.sh
    /tmp/rustup.sh -y --profile complete --default-toolchain nightly
}

install_zshconfig(){
    curl --proto '=https' --tlsv1.2 -sSfL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh > /tmp/oh-my-zsh
    chmod +x /tmp/oh-my-zsh


    /tmp/oh-my-zsh --keep-zshrc
    git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

}

#------------Main------------#
exec() {
    echo_info "Installing packages (This may take a while)"
    install_packages

    if [[ $HEADLESS != 'true' ]] ; then
        echo_info "Installing spacemacs"
        install_spacemacs

        echo_info "Installing rust (This may take a while)"
        install_rustup
    else
        echo_info "Rust and emacs will not be installed"
    fi

    echo_info "Installing zsh"
    install_zshconfig

    exit 0
}


#------------Argument parsing------------#
while (( "$#" )); do
  case "$1" in
    -h|--help)
      help
      exit 0
      ;;
    -s|--server)
      HEADLESS = 'true'
      shift
      ;;
    -*|--*=) # unsupported flags
      echo "Error: Unsupported flag $1" >&2
      exit 1
      ;;
    *) # preserve positional arguments
      PARAMS="$PARAMS $1"
      shift
      ;;
  esac
done #set positional arguments in their proper place
eval set -- "$PARAMS"

#------------Programm exec------------
exec